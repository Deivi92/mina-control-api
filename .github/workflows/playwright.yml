name: Build, Test and E2E Test

on:
  push:
    branches:
      - main
      - 'feat/empleado-crud-e2e'
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
  workflow_dispatch:

jobs:
  build:
    name: Build & Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build Backend and Run Unit Tests
        run: cd backend && mvn clean install

      - name: Install Frontend Dependencies
        run: cd frontend && npm ci

      - name: Build Frontend
        run: cd frontend && npm run build

      - name: Upload Backend Artifact (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/mina-control-api-1.0.0.jar

      - name: Upload Frontend Artifact (dist)
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

  e2e-test:
    name: End-to-End Tests
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: minacontrol_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Start Backend
        run: |
          nohup java -jar mina-control-api-1.0.0.jar --spring.profiles.active=github &
          echo "Waiting for backend to start..."
          timeout 120s bash -c 'while ! curl -s -f http://localhost:8080/actuator/health; do echo "Backend not ready, waiting..."; sleep 5; done'
          echo "Backend is ready!"
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/minacontrol_test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres

      - name: Install and Start Frontend Server
        run: |
          cd frontend
          npm install -g http-server
          nohup http-server dist --port 4173 &
          echo "Waiting for frontend to start..."
          npx wait-on http://localhost:4173 --timeout 180s
          echo "Frontend is ready!"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: frontend

      - name: Run Playwright Tests
        run: npm run test:e2e
        working-directory: frontend
        env:
          VITE_API_BASE_URL: http://localhost:8080

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
