name: Playwright Tests with Backend

# Controls when the action will run.
on:
  push:
    branches:
      - main
      - 'feat/empleado-crud-e2e'
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job
  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    services:
      # Setup PostgreSQL service
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: minacontrol_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    # Setup Java environment
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    # Setup Node.js environment for frontend
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    # Wait for PostgreSQL to be ready
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        echo "PostgreSQL is ready!"

    # Install backend dependencies and build
    - name: Build Backend
      run: |
        cd backend
        mvn clean package -DskipTests

    # Install frontend dependencies
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci

    # Install Playwright browsers
    - name: Install Playwright Browsers
      run: |
        cd frontend
        npx playwright install --with-deps

    # Start Backend in background
    - name: Start Backend
      run: |
        cd backend
        nohup java -jar target/mina-control-api-1.0.0.jar --spring.profiles.active=github &
        echo "Waiting for backend to start..."
        npx wait-on http://localhost:8080/actuator/health --timeout 120s
        echo "Backend is ready!"
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/minacontrol_test
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres

    # Build Frontend for production
    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    # Start Frontend preview server in background
    - name: Start Frontend
      run: |
        cd frontend
        nohup npm run preview &
        # Wait for frontend to be ready on port 4173 (Vite's default preview port)
        npx wait-on http://localhost:4173 --timeout 180s

    # Run Playwright tests
    - name: Run Playwright tests
      run: |
        cd frontend
        npm run test:e2e
      env:
        # This variable tells the frontend where to find the backend API
        VITE_API_BASE_URL: http://localhost:8080

    # Upload test results (screenshots, videos) as artifacts
    - uses: actions/upload-artifact@v4
      if: always() # Upload even if tests fail
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
