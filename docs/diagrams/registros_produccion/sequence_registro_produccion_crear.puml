@startuml sequence_registro_produccion_crear
title Secuencia: Crear Registro de ProducciÃ³n

actor Cliente as User
participant "RegistroProduccionController" as Ctrl
participant "RegistroProduccionService" as Srv
participant "RegistroProduccionRepository (In-Memory)" as RepoProd
participant "EmpleadoRepository (In-Memory)" as RepoEmp
participant "RegistroProduccion" as ModelProd
participant "Empleado" as ModelEmp
participant "RegistroProduccionRequestDTO" as ReqDTO
participant "RegistroProduccionResponseDTO" as ResDTO

User -> Ctrl : POST /api/registros-produccion (body: RegistroProduccionRequestDTO)
activate Ctrl
Ctrl -> Srv : crearRegistro(registroDTO)
activate Srv

Srv -> Srv : validarDatos(registroDTO)
note right of Srv: Valida fecha no futura,\ntoneladas > 0, etc.

Srv -> RepoEmp : findById(registroDTO.getResponsableTurnoId())
activate RepoEmp
RepoEmp --> Srv : Optional<Empleado>
deactivate RepoEmp

alt Empleado Encontrado
    Srv -> RepoProd : findByFechaRegistroAndTurno(fecha, turno)
    activate RepoProd
    RepoProd --> Srv : Optional<RegistroProduccion>
    deactivate RepoProd
    
    alt No Existe Registro para Misma Fecha y Turno
        Srv -> ReqDTO : toEntity(registroDTO)
        activate ReqDTO
        ReqDTO --> Srv : registroProduccionEntity
        deactivate ReqDTO
        
        Srv -> RepoProd : save(registroProduccionEntity)
        activate RepoProd
        RepoProd --> Srv : registroGuardado
        deactivate RepoProd
        
        Srv -> ResDTO : fromEntity(registroGuardado, empleadoEncontrado)
        activate ResDTO
        ResDTO --> Srv : registroResponseDTO
        deactivate ResDTO
        
        Srv --> Ctrl : registroResponseDTO
        Ctrl --> User : HTTP 201 Created (body: RegistroProduccionResponseDTO)
    else Ya Existe Registro para Misma Fecha y Turno
        Srv --> Ctrl : throws IllegalArgumentException("Ya existe un registro para esta fecha y turno")
        Ctrl -> GlobalExceptionHandler : maneja IllegalArgumentException
        GlobalExceptionHandler --> Ctrl : ResponseEntity (Error)
        Ctrl --> User : HTTP 409 Conflict (Error: Registro duplicado)
    end
else Empleado No Encontrado
    Srv --> Ctrl : throws RecursoNoEncontradoException("Empleado no encontrado")
    deactivate Srv
    Ctrl -> GlobalExceptionHandler : maneja RecursoNoEncontradoException
    GlobalExceptionHandler --> Ctrl : ResponseEntity (Error)
    Ctrl --> User : HTTP 404 Not Found (Error: Empleado no encontrado)
end
deactivate Ctrl
@enduml
