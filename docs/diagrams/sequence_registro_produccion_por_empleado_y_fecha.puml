@startuml sequence_registro_produccion_por_empleado_y_fecha
title Secuencia: Obtener Registros de ProducciÃ³n por Empleado y Fecha

actor Cliente as User
participant "RegistroProduccionController" as Ctrl
participant "RegistroProduccionService" as Srv
participant "RegistroProduccionRepository (In-Memory)" as RepoProd
participant "EmpleadoRepository (In-Memory)" as RepoEmp
participant "RegistroProduccion" as ModelProd
participant "Empleado" as ModelEmp
participant "RegistroProduccionDTO" as DTOProd

User -> Ctrl : GET /api/v1/registros-produccion/empleado-fecha?empleadoId={id}&fecha={fecha}
activate Ctrl
Ctrl -> Srv : obtenerRegistrosPorEmpleadoYFecha(empleadoId, fecha)
activate Srv

Srv -> RepoEmp : findById(empleadoId)
activate RepoEmp
RepoEmp --> Srv : Optional<Empleado>
deactivate RepoEmp

alt Empleado Encontrado
    Srv -> RepoProd : findByEmpleadoAndFecha(empleadoEncontrado, fecha)
    activate RepoProd
    RepoProd --> Srv : List<RegistroProduccion>
    deactivate RepoProd
    Srv -> Srv : mapListToDTOList(listaRegistros) ' self-call to represent mapping loop
    Srv --> Ctrl : List<RegistroProduccionDTO>
    Ctrl --> User : HTTP 200 OK (body: List<RegistroProduccionDTO>)
else Empleado No Encontrado
    Srv --> Ctrl : throws ResourceNotFoundException("Empleado no encontrado")
    deactivate Srv
    Ctrl -> GlobalExceptionHandler : maneja ResourceNotFoundException
    GlobalExceptionHandler --> Ctrl : ResponseEntity (Error)
    Ctrl --> User : HTTP 404 Not Found (Error: Empleado no encontrado)
end
deactivate Ctrl
@enduml
