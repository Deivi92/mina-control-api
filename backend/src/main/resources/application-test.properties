# Configuración de la Base de Datos H2 para Pruebas de Integración

# URL de conexión para una base de datos en memoria llamada 'testdb'.
# MODE=PostgreSQL: Simula el comportamiento de PostgreSQL para mayor consistencia.
# DB_CLOSE_DELAY=-1: Mantiene la base de datos viva mientras la JVM esté activa.
# INIT=CREATE SCHEMA IF NOT EXISTS public: Asegura que el esquema 'public' exista, imitando a PostgreSQL.
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS public

# Driver de H2
spring.datasource.driverClassName=org.h2.Driver

# Credenciales (para H2 en memoria, 'sa' y sin contraseña es lo estándar)
spring.datasource.username=sa
spring.datasource.password=

# Configuración de JPA/Hibernate para H2
# Dialecto específico para H2, permite a Hibernate generar SQL compatible.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# spring.jpa.hibernate.ddl-auto:
#  - 'create-drop': Crea el esquema de la BD al inicio de las pruebas y lo elimina al final.
#  - Garantiza que cada ejecución de prueba comience con un estado limpio.
spring.jpa.hibernate.ddl-auto=create-drop

# Muestra el SQL generado por Hibernate en los logs (útil para depuración)
spring.jpa.show-sql=true

# Formatea el SQL mostrado para que sea más legible
spring.jpa.properties.hibernate.format_sql=true